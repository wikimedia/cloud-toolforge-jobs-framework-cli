---
- envvars:
    - KUBECONFIG: /data/project/test/.kube/config
      CUSTOMURL: https://localhost:30001/api/v1
      CUSTOMADDR: 127.0.0.1
      CUSTOMFQDN: jobs.svc.toolsbeta.eqiad1.wikimedia.cloud
      CFGFILE: ./test-cfg.yaml
      SLEEP: "2"
      BIN: ./toolforge-jobs.py
      TOOLHOME: /data/project/test
      CONTAINER: tf-bullseye-std
      NORMALJOBNAME: test-job
      TESTCMD: test-cmd.sh
      SCHEDJOBNAME: test-sched-job
      CONTJOBNAME: test-cont-job
      LOADFILE: ./test-load.yaml
---
- name: prepare tests
  tests:
    - cmd: |
           cat << EOF > ${CFGFILE}
           ---
           # autogenerated configuration file by the testsuite
           api_url: ${CUSTOMURL}
           kubeconfig: ${KUBECONFIG}
           customaddr: ${CUSTOMADDR}
           customfqdn: ${CUSTOMFQDN}
           EOF
      retcode: 0
      stderr: ""
    # cleanup everything
    - cmd: rm -f ${TOOLHOME}/${NORMALJOBNAME}.*
    - cmd: rm -f ${TOOLHOME}/${SCHEDJOBNAME}.*
    - cmd: rm -f ${TOOLHOME}/${CONTJOBNAME}.*
    - cmd: ${BIN} --cfg ${CFGFILE} flush
    - cmd: sleep ${SLEEP}

- name: list containers
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} containers | grep -q "Short name"
      retcode: 0
      stdout: ""
      stderr: ""
    - cmd: ${BIN} --cfg ${CFGFILE} containers | grep -q "Docker container image"
      retcode: 0
      stdout: ""
      stderr: ""
    - cmd: ${BIN} --cfg ${CFGFILE} containers | grep -q ${CONTAINER}
      retcode: 0
      stdout: ""
      stderr: ""

- name: run normal job
  tests:
    - cmd: |
           cat << EOF > ${TOOLHOME}/${TESTCMD}
           #!/bin/sh
           echo stdout \$1
           echo stderr >&2
           EOF
      retcode: 0
      stderr: ""
    - cmd: chmod a+x ${TOOLHOME}/${TESTCMD}
    - cmd: ${BIN} --cfg ${CFGFILE} run ${NORMALJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER}
      retcode: 0

- name: show normal job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Job name:"[[:space:]]*"| ${NORMALJOBNAME}"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Command:"[[:space:]]*"| ./${TESTCMD} --withargs"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Job type:"[[:space:]]*"| normal"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Container:"[[:space:]]*"| ${CONTAINER}"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "File log:"[[:space:]]*"| yes"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Resources:"[[:space:]]*"| default"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Status:"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Hints:"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | egrep -q "Emails:"
      retcode: 0

- name: list normal job
  tests:
    # predictable table headers
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep "Job name:" | grep "Command:" | grep "Job type:" | grep "Container:" | grep "File log:" | grep "Resources:" | grep "Status:" | grep -q "Emails:"
      retcode: 0
    # predictable job list output
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep ${NORMALJOBNAME} | grep "./${TESTCMD} --withargs" | grep "normal" | grep ${CONTAINER} | grep yes | grep -q default
      retcode: 0

- name: normal job produces file logs
  tests:
    - cmd: grep -q "stdout --withargs" ${TOOLHOME}/${NORMALJOBNAME}.out
      retcode: 0
    - cmd: grep -q "stderr" ${TOOLHOME}/${NORMALJOBNAME}.err
      retcode: 0

- name: normal job can be deleted
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} delete ${NORMALJOBNAME}
      retcode: 0
    - cmd: sleep ${SLEEP}
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | grep ERROR | grep -q "job '${NORMALJOBNAME}' does not exists"
      retcode: 0

- name: normal job with no file log doesn't produce it
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} run ${NORMALJOBNAME}2 --command "./${TESTCMD} --withargs" --image ${CONTAINER} --no-filelog
      retcode: 0
    - cmd: ls ${TOOLHOME}/${NORMALJOBNAME}2.out
      retcode: 2
    - cmd: ls ${TOOLHOME}/${NORMALJOBNAME}2.err
      retcode: 2
    # cleanup
    - cmd: ${BIN} --cfg ${CFGFILE} delete  ${NORMALJOBNAME}2

- name: job with non-default resource allocation
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} run ${NORMALJOBNAME} --command ./${TESTCMD} --image ${CONTAINER} --mem 100Mi --cpu 1
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} show ${NORMALJOBNAME} | grep Resources | grep mem | grep 100Mi | grep cpu | grep -q 1
      retcode: 0
    # cleanup
    - cmd: ${BIN} --cfg ${CFGFILE} delete  ${NORMALJOBNAME}

- name: run schedule job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} run ${SCHEDJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER} --schedule "* * * * *"
      retcode: 0

- name: show schedule job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} show ${SCHEDJOBNAME} | egrep "Job type:"[[:space:]]*"| schedule" | grep -q "* * * * *"
      retcode: 0

- name: list schedule job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep ${SCHEDJOBNAME} | grep schedule | grep -q "* * * * *"
      retcode: 0

- name: delete schedule job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} delete ${SCHEDJOBNAME}
      retcode: 0
    - cmd: sleep ${SLEEP}
    - cmd: ${BIN} --cfg ${CFGFILE} show ${SCHEDJOBNAME} | grep ERROR | grep -q "job '${SCHEDJOBNAME}' does not exists"
      retcode: 0

- name: run continuous job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} run ${CONTJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER} --continuous
      retcode: 0

- name: show continuous job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} show ${CONTJOBNAME} | egrep -q "Job type:"[[:space:]]*"| continuous"
      retcode: 0

- name: list continuous job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep ${CONTJOBNAME} | grep -q continuous
      retcode: 0

- name: delete continuous job
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} delete ${CONTJOBNAME}
      retcode: 0
    - cmd: sleep ${SLEEP}
    - cmd: ${BIN} --cfg ${CFGFILE} show ${CONTJOBNAME} | grep ERROR | grep -q "job '${CONTJOBNAME}' does not exists"
      retcode: 0

- name: run 3 jobs, they are all listed together
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} run ${NORMALJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER}
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} run ${CONTJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER} --continuous
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} run ${SCHEDJOBNAME} --command "./${TESTCMD} --withargs" --image ${CONTAINER} --schedule "* * * * *"
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep ${CONTAINER} | wc -l
      retcode: 0
      stdout: "3\n"

- name: job loading
  tests:
    - cmd: |
           cat << EOF > ${LOADFILE}
           ---
           # autogenerated file by the testsuite
           - name: ${SCHEDJOBNAME}
             command: ./${TESTCMD} --withargs
             image: ${CONTAINER}
             no-filelog: true
             schedule: "* * * * *"
             emails: onfinish
           - image: ${CONTAINER}
             name: ${CONTJOBNAME}
             command: ./${TESTCMD} --withargs
             continuous: true
             emails: onfailure
           - name: ${NORMALJOBNAME}
             image: ${CONTAINER}
             command: ./${TESTCMD} --withargs
             wait: true
             emails: all
           EOF
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} load ${LOADFILE}
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep ${CONTAINER} | wc -l
      retcode: 0
      stdout: "3\n"

- name: cleanup
  tests:
    - cmd: ${BIN} --cfg ${CFGFILE} flush
      retcode: 0
    - cmd: ${BIN} --cfg ${CFGFILE} list | grep -q ${CONTAINERS}
      retcode: 2
